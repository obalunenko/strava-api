// Code generated by go-swagger; DO NOT EDIT.

package routes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/obalunenko/strava-api/internal/gen/strava-api-go/models"
)

// GetRouteByIDReader is a Reader for the GetRouteByID structure.
type GetRouteByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRouteByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRouteByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetRouteByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetRouteByIDOK creates a GetRouteByIDOK with default headers values
func NewGetRouteByIDOK() *GetRouteByIDOK {
	return &GetRouteByIDOK{}
}

/*
GetRouteByIDOK describes a response with status code 200, with default header values.

A representation of the route.
*/
type GetRouteByIDOK struct {
	Payload *models.Route
}

// IsSuccess returns true when this get route by Id o k response has a 2xx status code
func (o *GetRouteByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get route by Id o k response has a 3xx status code
func (o *GetRouteByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get route by Id o k response has a 4xx status code
func (o *GetRouteByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get route by Id o k response has a 5xx status code
func (o *GetRouteByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get route by Id o k response a status code equal to that given
func (o *GetRouteByIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get route by Id o k response
func (o *GetRouteByIDOK) Code() int {
	return 200
}

func (o *GetRouteByIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /routes/{id}][%d] getRouteByIdOK %s", 200, payload)
}

func (o *GetRouteByIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /routes/{id}][%d] getRouteByIdOK %s", 200, payload)
}

func (o *GetRouteByIDOK) GetPayload() *models.Route {
	return o.Payload
}

func (o *GetRouteByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Route)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRouteByIDDefault creates a GetRouteByIDDefault with default headers values
func NewGetRouteByIDDefault(code int) *GetRouteByIDDefault {
	return &GetRouteByIDDefault{
		_statusCode: code,
	}
}

/*
GetRouteByIDDefault describes a response with status code -1, with default header values.

Unexpected error.
*/
type GetRouteByIDDefault struct {
	_statusCode int

	Payload *models.Fault
}

// IsSuccess returns true when this get route by Id default response has a 2xx status code
func (o *GetRouteByIDDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get route by Id default response has a 3xx status code
func (o *GetRouteByIDDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get route by Id default response has a 4xx status code
func (o *GetRouteByIDDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get route by Id default response has a 5xx status code
func (o *GetRouteByIDDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get route by Id default response a status code equal to that given
func (o *GetRouteByIDDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get route by Id default response
func (o *GetRouteByIDDefault) Code() int {
	return o._statusCode
}

func (o *GetRouteByIDDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /routes/{id}][%d] getRouteById default %s", o._statusCode, payload)
}

func (o *GetRouteByIDDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /routes/{id}][%d] getRouteById default %s", o._statusCode, payload)
}

func (o *GetRouteByIDDefault) GetPayload() *models.Fault {
	return o.Payload
}

func (o *GetRouteByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Fault)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
