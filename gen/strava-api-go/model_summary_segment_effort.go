/*
 * Strava API v3
 *
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * API version: 3.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package strava_api_go

import (
	"time"
)

type SummarySegmentEffort struct {
	// The unique identifier of this effort
	Id int64 `json:"id,omitempty"`
	// The unique identifier of the activity related to this effort
	ActivityId int64 `json:"activity_id,omitempty"`
	// The effort's elapsed time
	ElapsedTime int32 `json:"elapsed_time,omitempty"`
	// The time at which the effort was started.
	StartDate time.Time `json:"start_date,omitempty"`
	// The time at which the effort was started in the local timezone.
	StartDateLocal time.Time `json:"start_date_local,omitempty"`
	// The effort's distance in meters
	Distance float32 `json:"distance,omitempty"`
	// Whether this effort is the current best on the leaderboard
	IsKom bool `json:"is_kom,omitempty"`
}
