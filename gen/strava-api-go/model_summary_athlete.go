/*
 * Strava API v3
 *
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * API version: 3.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package strava_api_go

import (
	"time"
)

type SummaryAthlete struct {
	// The unique identifier of the athlete
	Id int64 `json:"id,omitempty"`
	// Resource state, indicates level of detail. Possible values: 1 -> \"meta\", 2 -> \"summary\", 3 -> \"detail\"
	ResourceState int32 `json:"resource_state,omitempty"`
	// The athlete's first name.
	Firstname string `json:"firstname,omitempty"`
	// The athlete's last name.
	Lastname string `json:"lastname,omitempty"`
	// URL to a 62x62 pixel profile picture.
	ProfileMedium string `json:"profile_medium,omitempty"`
	// URL to a 124x124 pixel profile picture.
	Profile string `json:"profile,omitempty"`
	// The athlete's city.
	City string `json:"city,omitempty"`
	// The athlete's state or geographical region.
	State string `json:"state,omitempty"`
	// The athlete's country.
	Country string `json:"country,omitempty"`
	// The athlete's sex.
	Sex string `json:"sex,omitempty"`
	// Deprecated.  Use summit field instead. Whether the athlete has any Summit subscription.
	Premium bool `json:"premium,omitempty"`
	// Whether the athlete has any Summit subscription.
	Summit bool `json:"summit,omitempty"`
	// The time at which the athlete was created.
	CreatedAt time.Time `json:"created_at,omitempty"`
	// The time at which the athlete was last updated.
	UpdatedAt time.Time `json:"updated_at,omitempty"`
}
